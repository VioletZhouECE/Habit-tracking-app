import React from "react";
import ReactDOM from "react-dom";
import SidebarCollapse from "../react_components/sidebar_collapse.js";
import SidebarOriginal from "../react_components/sidebar_original.js";
import CategorySection from "../react_components/category_section.js";

class HomepageUIElement{
    constructor(){
        this.sidebar_collapse = document.querySelector('#sidebar_collapse');
        ReactDOM.render(<SidebarOriginal/>, this.sidebar_collapse);
        this.wrapper = document.querySelector("div.wrapper.d-flex");
        this.navbar = document.querySelector('#sidebar');
        this.sidebar = document.querySelector("#sidebar");
        this.hamburger_menu = document.querySelector("#hamburger-menu");
        this.plus_icon = document.querySelector(".fa-plus-circle");
        this.category_section = document.querySelector("#category_section")
        ReactDOM.render(<CategorySection/>, this.category_section);
    }   
}

var ui = new HomepageUIElement()

//window.onload = function appOnload(){
//ReactDOM.render(<SidebarOriginal/>, ui.sidebar_collapse)
//};

//load emojione area
$(document).ready(function() {
    $("#emoji-area").emojioneArea(
        {
            autocomplete: false,
            pickerPosition: "bottom" 
        }
    );
});

ui.hamburger_menu.addEventListener('click', () => {
    console.log(`now the minwidth is ${document.querySelector('#sidebar').offsetWidth}`)
    if (document.querySelector('#sidebar').offsetWidth == "170"){
        console.log("Now collapse the sidebar")
        //clear the sidebar content by calling ReactDOM.unmount
        ReactDOM.unmountComponentAtNode(ui.sidebar_collapse);
        //then re-add the content
        ReactDOM.render(<SidebarCollapse/>, ui.sidebar_collapse);
        console.log("react script has been executed");
    } else {
        console.log("Now expand the sidebar")
        ReactDOM.unmountComponentAtNode(ui.sidebar_collapse);
        ReactDOM.render(<SidebarOriginal/>, ui.sidebar_collapse);
    }
})

//use event delegation here since we are dealing with dynamic elements generated by React
document.addEventListener('mouseover',(e)=> {
    if (e.target == document.querySelector(".fa-plus-circle")){
        e.target.classList.remove('fa-2x');
        console.log("Hey I am here")
        e.target.classList.add('fa-3x');
        e.target.style.color = "tomato";
        console.log("Here as well")
    }
})


document.addEventListener('mouseout',(e)=> {
    if (e.target == document.querySelector(".fa-plus-circle")){
        console.log("And here")
        e.target.classList.remove('fa-3x');
        console.log("finally I am here!")
        e.target.classList.add('fa-2x');
        e.target.style.color = "orange";
    }
})
